// Code generated by MockGen. DO NOT EDIT.
// Source: writer_test.go

// Package audit_mock is a generated GoMock package.
package audit_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWriterCloserSyncer is a mock of WriterCloserSyncer interface.
type MockWriterCloserSyncer struct {
	ctrl     *gomock.Controller
	recorder *MockWriterCloserSyncerMockRecorder
}

// MockWriterCloserSyncerMockRecorder is the mock recorder for MockWriterCloserSyncer.
type MockWriterCloserSyncerMockRecorder struct {
	mock *MockWriterCloserSyncer
}

// NewMockWriterCloserSyncer creates a new mock instance.
func NewMockWriterCloserSyncer(ctrl *gomock.Controller) *MockWriterCloserSyncer {
	mock := &MockWriterCloserSyncer{ctrl: ctrl}
	mock.recorder = &MockWriterCloserSyncerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWriterCloserSyncer) EXPECT() *MockWriterCloserSyncerMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockWriterCloserSyncer) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockWriterCloserSyncerMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockWriterCloserSyncer)(nil).Close))
}

// Sync mocks base method.
func (m *MockWriterCloserSyncer) Sync() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sync")
	ret0, _ := ret[0].(error)
	return ret0
}

// Sync indicates an expected call of Sync.
func (mr *MockWriterCloserSyncerMockRecorder) Sync() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sync", reflect.TypeOf((*MockWriterCloserSyncer)(nil).Sync))
}

// Write mocks base method.
func (m *MockWriterCloserSyncer) Write(p []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", p)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Write indicates an expected call of Write.
func (mr *MockWriterCloserSyncerMockRecorder) Write(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockWriterCloserSyncer)(nil).Write), p)
}
