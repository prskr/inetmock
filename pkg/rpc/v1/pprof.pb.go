// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: rpc/v1/pprof.proto

package rpcv1

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProfileDumpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileName string `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Debug       int32  `protobuf:"varint,2,opt,name=debug,proto3" json:"debug,omitempty"`
	// this applies only for 'heap' profile
	GcBeforeDump bool `protobuf:"varint,3,opt,name=gc_before_dump,json=gcBeforeDump,proto3" json:"gc_before_dump,omitempty"`
}

func (x *ProfileDumpRequest) Reset() {
	*x = ProfileDumpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_v1_pprof_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileDumpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileDumpRequest) ProtoMessage() {}

func (x *ProfileDumpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_v1_pprof_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileDumpRequest.ProtoReflect.Descriptor instead.
func (*ProfileDumpRequest) Descriptor() ([]byte, []int) {
	return file_rpc_v1_pprof_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileDumpRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ProfileDumpRequest) GetDebug() int32 {
	if x != nil {
		return x.Debug
	}
	return 0
}

func (x *ProfileDumpRequest) GetGcBeforeDump() bool {
	if x != nil {
		return x.GcBeforeDump
	}
	return false
}

type ProfileDumpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileData []byte `protobuf:"bytes,1,opt,name=profile_data,json=profileData,proto3" json:"profile_data,omitempty"`
}

func (x *ProfileDumpResponse) Reset() {
	*x = ProfileDumpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_v1_pprof_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileDumpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileDumpResponse) ProtoMessage() {}

func (x *ProfileDumpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_v1_pprof_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileDumpResponse.ProtoReflect.Descriptor instead.
func (*ProfileDumpResponse) Descriptor() ([]byte, []int) {
	return file_rpc_v1_pprof_proto_rawDescGZIP(), []int{1}
}

func (x *ProfileDumpResponse) GetProfileData() []byte {
	if x != nil {
		return x.ProfileData
	}
	return nil
}

type CPUProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileDuration *durationpb.Duration `protobuf:"bytes,1,opt,name=profile_duration,json=profileDuration,proto3" json:"profile_duration,omitempty"`
}

func (x *CPUProfileRequest) Reset() {
	*x = CPUProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_v1_pprof_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUProfileRequest) ProtoMessage() {}

func (x *CPUProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_v1_pprof_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUProfileRequest.ProtoReflect.Descriptor instead.
func (*CPUProfileRequest) Descriptor() ([]byte, []int) {
	return file_rpc_v1_pprof_proto_rawDescGZIP(), []int{2}
}

func (x *CPUProfileRequest) GetProfileDuration() *durationpb.Duration {
	if x != nil {
		return x.ProfileDuration
	}
	return nil
}

type CPUProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileData []byte `protobuf:"bytes,1,opt,name=profile_data,json=profileData,proto3" json:"profile_data,omitempty"`
}

func (x *CPUProfileResponse) Reset() {
	*x = CPUProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_v1_pprof_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUProfileResponse) ProtoMessage() {}

func (x *CPUProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_v1_pprof_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUProfileResponse.ProtoReflect.Descriptor instead.
func (*CPUProfileResponse) Descriptor() ([]byte, []int) {
	return file_rpc_v1_pprof_proto_rawDescGZIP(), []int{3}
}

func (x *CPUProfileResponse) GetProfileData() []byte {
	if x != nil {
		return x.ProfileData
	}
	return nil
}

type TraceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceDuration *durationpb.Duration `protobuf:"bytes,1,opt,name=trace_duration,json=traceDuration,proto3" json:"trace_duration,omitempty"`
}

func (x *TraceRequest) Reset() {
	*x = TraceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_v1_pprof_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceRequest) ProtoMessage() {}

func (x *TraceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_v1_pprof_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceRequest.ProtoReflect.Descriptor instead.
func (*TraceRequest) Descriptor() ([]byte, []int) {
	return file_rpc_v1_pprof_proto_rawDescGZIP(), []int{4}
}

func (x *TraceRequest) GetTraceDuration() *durationpb.Duration {
	if x != nil {
		return x.TraceDuration
	}
	return nil
}

type TraceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileData []byte `protobuf:"bytes,1,opt,name=profile_data,json=profileData,proto3" json:"profile_data,omitempty"`
}

func (x *TraceResponse) Reset() {
	*x = TraceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_v1_pprof_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceResponse) ProtoMessage() {}

func (x *TraceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_v1_pprof_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceResponse.ProtoReflect.Descriptor instead.
func (*TraceResponse) Descriptor() ([]byte, []int) {
	return file_rpc_v1_pprof_proto_rawDescGZIP(), []int{5}
}

func (x *TraceResponse) GetProfileData() []byte {
	if x != nil {
		return x.ProfileData
	}
	return nil
}

var File_rpc_v1_pprof_proto protoreflect.FileDescriptor

var file_rpc_v1_pprof_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x69, 0x6e, 0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x44, 0x75, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x63, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x5f, 0x64, 0x75, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x67, 0x63,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x44, 0x75, 0x6d, 0x70, 0x22, 0x38, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x59, 0x0a, 0x11, 0x43, 0x50, 0x55, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x37, 0x0a, 0x12, 0x43, 0x50, 0x55, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x0d, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x32, 0x8b,
	0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x75,
	0x6d, 0x70, 0x12, 0x23, 0x2e, 0x69, 0x6e, 0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x75, 0x6d, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6e, 0x65, 0x74, 0x6d, 0x6f,
	0x63, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x0a, 0x43, 0x50, 0x55, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x69, 0x6e,
	0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x50,
	0x55, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x69, 0x6e, 0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x50, 0x55, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x2e,
	0x69, 0x6e, 0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69,
	0x6e, 0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb0, 0x01, 0x0a,
	0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x50, 0x70, 0x72, 0x6f, 0x66, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x02, 0x50, 0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x6e, 0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x2f, 0x69, 0x6e, 0x65, 0x74, 0x6d, 0x6f,
	0x63, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x70,
	0x63, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x49, 0x52, 0x58, 0xaa, 0x02, 0x0f, 0x49, 0x6e, 0x65, 0x74,
	0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x49, 0x6e,
	0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x5c, 0x52, 0x70, 0x63, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b,
	0x49, 0x6e, 0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x5c, 0x52, 0x70, 0x63, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x49, 0x6e,
	0x65, 0x74, 0x6d, 0x6f, 0x63, 0x6b, 0x3a, 0x3a, 0x52, 0x70, 0x63, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_v1_pprof_proto_rawDescOnce sync.Once
	file_rpc_v1_pprof_proto_rawDescData = file_rpc_v1_pprof_proto_rawDesc
)

func file_rpc_v1_pprof_proto_rawDescGZIP() []byte {
	file_rpc_v1_pprof_proto_rawDescOnce.Do(func() {
		file_rpc_v1_pprof_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_v1_pprof_proto_rawDescData)
	})
	return file_rpc_v1_pprof_proto_rawDescData
}

var file_rpc_v1_pprof_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_rpc_v1_pprof_proto_goTypes = []interface{}{
	(*ProfileDumpRequest)(nil),  // 0: inetmock.rpc.v1.ProfileDumpRequest
	(*ProfileDumpResponse)(nil), // 1: inetmock.rpc.v1.ProfileDumpResponse
	(*CPUProfileRequest)(nil),   // 2: inetmock.rpc.v1.CPUProfileRequest
	(*CPUProfileResponse)(nil),  // 3: inetmock.rpc.v1.CPUProfileResponse
	(*TraceRequest)(nil),        // 4: inetmock.rpc.v1.TraceRequest
	(*TraceResponse)(nil),       // 5: inetmock.rpc.v1.TraceResponse
	(*durationpb.Duration)(nil), // 6: google.protobuf.Duration
}
var file_rpc_v1_pprof_proto_depIdxs = []int32{
	6, // 0: inetmock.rpc.v1.CPUProfileRequest.profile_duration:type_name -> google.protobuf.Duration
	6, // 1: inetmock.rpc.v1.TraceRequest.trace_duration:type_name -> google.protobuf.Duration
	0, // 2: inetmock.rpc.v1.ProfilingService.ProfileDump:input_type -> inetmock.rpc.v1.ProfileDumpRequest
	2, // 3: inetmock.rpc.v1.ProfilingService.CPUProfile:input_type -> inetmock.rpc.v1.CPUProfileRequest
	4, // 4: inetmock.rpc.v1.ProfilingService.Trace:input_type -> inetmock.rpc.v1.TraceRequest
	1, // 5: inetmock.rpc.v1.ProfilingService.ProfileDump:output_type -> inetmock.rpc.v1.ProfileDumpResponse
	3, // 6: inetmock.rpc.v1.ProfilingService.CPUProfile:output_type -> inetmock.rpc.v1.CPUProfileResponse
	5, // 7: inetmock.rpc.v1.ProfilingService.Trace:output_type -> inetmock.rpc.v1.TraceResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rpc_v1_pprof_proto_init() }
func file_rpc_v1_pprof_proto_init() {
	if File_rpc_v1_pprof_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_v1_pprof_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileDumpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_v1_pprof_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileDumpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_v1_pprof_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_v1_pprof_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_v1_pprof_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_v1_pprof_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_v1_pprof_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_v1_pprof_proto_goTypes,
		DependencyIndexes: file_rpc_v1_pprof_proto_depIdxs,
		MessageInfos:      file_rpc_v1_pprof_proto_msgTypes,
	}.Build()
	File_rpc_v1_pprof_proto = out.File
	file_rpc_v1_pprof_proto_rawDesc = nil
	file_rpc_v1_pprof_proto_goTypes = nil
	file_rpc_v1_pprof_proto_depIdxs = nil
}
